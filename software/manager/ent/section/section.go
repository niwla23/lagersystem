// Code generated by ent, DO NOT EDIT.

package section

import (
	"time"
)

const (
	// Label holds the string label denoting the section type in the database.
	Label = "section"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// EdgeBox holds the string denoting the box edge name in mutations.
	EdgeBox = "box"
	// EdgeParts holds the string denoting the parts edge name in mutations.
	EdgeParts = "parts"
	// Table holds the table name of the section in the database.
	Table = "sections"
	// BoxTable is the table that holds the box relation/edge.
	BoxTable = "sections"
	// BoxInverseTable is the table name for the Box entity.
	// It exists in this package in order to avoid circular dependency with the "box" package.
	BoxInverseTable = "boxes"
	// BoxColumn is the table column denoting the box relation/edge.
	BoxColumn = "box_sections"
	// PartsTable is the table that holds the parts relation/edge. The primary key declared below.
	PartsTable = "part_sections"
	// PartsInverseTable is the table name for the Part entity.
	// It exists in this package in order to avoid circular dependency with the "part" package.
	PartsInverseTable = "parts"
)

// Columns holds all SQL columns for section fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "sections"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"box_sections",
}

var (
	// PartsPrimaryKey and PartsColumn2 are the table columns denoting the
	// primary key for the parts relation (M2M).
	PartsPrimaryKey = []string{"part_id", "section_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
)
