// Code generated by ent, DO NOT EDIT.

package part

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the part type in the database.
	Label = "part"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldImageId holds the string denoting the imageid field in the database.
	FieldImageId = "image_id"
	// EdgeTags holds the string denoting the tags edge name in mutations.
	EdgeTags = "tags"
	// EdgeProperties holds the string denoting the properties edge name in mutations.
	EdgeProperties = "properties"
	// EdgeBox holds the string denoting the box edge name in mutations.
	EdgeBox = "box"
	// Table holds the table name of the part in the database.
	Table = "parts"
	// TagsTable is the table that holds the tags relation/edge. The primary key declared below.
	TagsTable = "part_tags"
	// TagsInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagsInverseTable = "tags"
	// PropertiesTable is the table that holds the properties relation/edge.
	PropertiesTable = "properties"
	// PropertiesInverseTable is the table name for the Property entity.
	// It exists in this package in order to avoid circular dependency with the "property" package.
	PropertiesInverseTable = "properties"
	// PropertiesColumn is the table column denoting the properties relation/edge.
	PropertiesColumn = "part_properties"
	// BoxTable is the table that holds the box relation/edge.
	BoxTable = "parts"
	// BoxInverseTable is the table name for the Box entity.
	// It exists in this package in order to avoid circular dependency with the "box" package.
	BoxInverseTable = "boxes"
	// BoxColumn is the table column denoting the box relation/edge.
	BoxColumn = "box_parts"
)

// Columns holds all SQL columns for part fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
	FieldName,
	FieldDescription,
	FieldAmount,
	FieldImageId,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "parts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"box_parts",
}

var (
	// TagsPrimaryKey and TagsColumn2 are the table columns denoting the
	// primary key for the tags relation (M2M).
	TagsPrimaryKey = []string{"part_id", "tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/niwla23/lagersystem/manager/ent/generated/runtime"
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount int
)
